# -*- coding: utf-8 -*-
"""MLLab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11o-2uQUBYzppCplDZX6pfo9og8Zxndvq
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#To load the data
from google.colab import files
uploaded = files.upload()

dataset.head()

import io
dataset = pd.read_csv(io.BytesIO(uploaded['Bank_Data.csv']))

X = dataset.iloc[:,3:13].values
y = dataset.iloc[:,13].values


from sklearn.preprocessing import LabelEncoder,OneHotEncoder
label_1 = LabelEncoder()
X[:,1] = label_1.fit_transform(X[:,1])
X[:,2]= label_1.fit_transform(X[:,2])

onehot = OneHotEncoder(categorical_features=[1])
X = onehot.fit_transform(X).toarray()
X  =X[:,1:]


y = label_1.fit_transform(y)



from sklearn.model_selection import train_test_split
X_train ,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 0)



from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train  = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

X_test.shape

import keras
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Activation, Dropout, Flatten, Dense


classifer = Sequential()
classifer.add(Dense(output_dim = 6,init = 'uniform',activation  = 'relu',input_dim = 11))
classifer.add(Dense(output_dim = 6,init = 'uniform',activation = 'relu'))
classifer.add(Dense(1))
classifer.add(Activation('sigmoid'))
classifer.compile(optimizer='adam',loss='binary_crossentropy',metrics = ['accuracy'])
classifer.fit(X_train,y_train,batch_size = 10,nb_epoch =100)

y_pred = classifer.predict(X_test)
y_pred = y_pred>0.5
from sklearn.metrics import confusion_matrix
cm  = confusion_matrix(y_test,y_pred)

cm

(1543+145)/2000

scores = classifer.evaluate(X_test, y_test)
print("\n%s: %.2f%%" % (classifer.metrics_names[1], scores[1]*100))